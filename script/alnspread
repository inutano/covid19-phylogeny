#!/usr/bin/perl -X
use strict;
use threads;
use warnings;
use Bio::SeqIO;
use File::Copy;
use File::Spec;
use File::Temp 'tempdir';
use Getopt::Long;
use Bio::Phylo::Util::Logger ':levels';

# process command line arguments
my $indir;
my $yml;
my $files = 20;
my $verbosity = INFO;
GetOptions(
	'indir=s'  => \$indir,
	'verbose+' => \$verbosity,	
	'yml=s'    => \$yml,
	'files=i'  => \$files,
);

# instantiate services
Bio::Phylo::Util::Logger->new(
	'-class'    => 'main',
	'-level'    => $verbosity,
);

# start spreading alignments
my @files;
opendir my $dh, $indir or die $!;
while( my $entry = readdir $dh ) {

	# skip over .. etc.
	push @files, "${indir}/${entry}" if $entry =~ /.fasta$/;
	if ( scalar(@files) == $files ) {
	
		# delegate the alignments across $files threads
		INFO "launching alignment threads";
		my @threads  = map { sleep(3); threads->create( \&align, $_ ) } @files;
		my @outfiles = map { $_->join } @threads;
		DEBUG "aligned the following files:\n\t" . join("\n\t", @outfiles);
	}
}

sub align {
	my $infile = shift;
	my $aligned = `alncipres -i $infile -y $yml`;
	my $outfile = "${infile}.aln";
	open my $fh, '>', $outfile or die $!;
	print $fh $aligned;
	close $fh;
	return $outfile;
}
